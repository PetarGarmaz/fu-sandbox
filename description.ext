//ACE Spectator Respawn
#include "Dialog\defines.hpp"
#include "Dialog\PlayerMenu.hpp"
#include "Dialog\Stats.hpp"
#include "Dialog\VehiclesMenu.hpp"
#include "Dialog\RecruitUnits.hpp"
#include "Dialog\RoleSelection.hpp"
#include "Dialog\GarageManager.hpp"
#include "Dialog\Missions.hpp"
#include "Dialog\Settings.hpp"
#include "Dialog\VehicleManager_StoreVehicle.hpp"
#include "Dialog\3DRadio.hpp"

respawnOnStart = -1;
respawn = "Base";
respawnDelay = 30;
respawnTemplates[] = {"Base","Counter","ace_spectator"};
enableDebugConsole = 1;
disabledAI = 1;

author = "Bizo";
onLoadName = "FUS - Sandbox";
loadScreen = "Images\billboard.jpg";

class Header {
	gameType = Sandbox;	// Game type
	minPlayers =  1;	// minimum number of players the mission supports
	maxPlayers = 25;	// maximum number of players the mission supports
};

class CfgSounds {
	sounds[] = {};

	class FU_Beep {
		name = "FU_Beep";
		sound[] = {"Sfx\FU_Beep.ogg", 5, 1, 300};
		titles[] = {};
	};
};

class CfgFunctions {
	class FU {
		class Inits {
			class initOfficer{};
			class initFlags{};
			class initMedicalTent{};
			class initPilot{};
			class initSafeZone{};
			class initStats{};
			class initTerminal{};
			class initTablet{};
			class initConquestHUD{};
		};

		class Misc {
			class recruitUnits{};
			class roleSelection{};
			class artillery{};
			class haloDrop{};
			class enemyData{};
			class setRole{};
			class getRole{};
		};

		class Tablet {
			class dateToText{};
			class openTablet{};
			class playerMenu{};
			class openPlayerMenu{};
		};

		class Tasks {
			class missionGenerator{};
			class generateMission{};
			class setMarkerColor{};
			class getMissionLocation{};
			class taskAssassinate{};
			class taskAttack{};
			class taskConquest{};
			class taskPOW{};
			class taskDestroyAA{};
			class taskDestroyRT{};
			class taskHackData{};
			class taskSecureMP{};
			class taskDepot{};
			class taskLogistics{};
			class taskIDAP{};
			class taskCAP{};
			
		};

		class Units {
			class getFactionCompositions{};
		};

		class Training {
			class taskTraining{};
			class trainingDialogue{};
			class trainingAddStage{};
			class trainingPreventDeath{};
			class trainingPreventSquadJoin{};
			class trainingPreventDriver{};
		};

		class Vehicles {
			class vehicleGarage{};
			class vehicleSpawn{};
			class vehicleManager{};
			class garage{};
		};
	}
};

class CfgNotifications {
	class Default {
		title = "";				// Title displayed as text on black background. Filled by arguments.
		iconPicture = "";		// Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = "";			// Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "";		// Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1};	// Icon and text color
		duration = 5;			// How many seconds will the notification be displayed
		priority = 0;			// Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {};		// Required difficulty settings. All listed difficulties has to be enabled
	};
	
	class TransportRequest {
		title = "Transport Notification";
		iconPicture = "\A3\ui_f\data\igui\cfg\simpleTasks\types\land_ca.paa";
		description = "%1";
		color[] = {1,1,0,1};
		duration = 5;
		priority = 7;
	};
	
	class StatusReport {
		title = "Status Report";
		iconPicture = "\A3\ui_f\data\igui\cfg\simpleTasks\types\%2_ca.paa";
		description = "%1";
		color[] = {1,1,0,1};
		duration = 5;
		priority = 7;
	};
};

class RscTitles {
	class FU_HUD {
		idd = 4600;
		fadein = 3;
		fadeout = 3;
		duration = 1e+011;
		onLoad = "uinamespace setVariable ['FU_HUD', _this select 0]";
		onUnLoad = "uinamespace setVariable ['FU_HUD', nil]";
		
		class Controls {
			class BG_L: IGUIBack
			{
				idc = 4601;
				x = 0.376219 * safezoneW + safezoneX;
				y = 0.049 * safezoneH + safezoneY;
				w = 0.118623 * safezoneW;
				h = 0.066 * safezoneH;
			};
			class BG_R: IGUIBack
			{
				idc = 4602;
				x = 0.505158 * safezoneW + safezoneX;
				y = 0.049 * safezoneH + safezoneY;
				w = 0.118623 * safezoneW;
				h = 0.066 * safezoneH;
			};
			class Title: IGUIBack
			{
				idc = 4603;
				x = 0.376219 * safezoneW + safezoneX;
				y = 0.00500001 * safezoneH + safezoneY;
				w = 0.247562 * safezoneW;
				h = 0.033 * safezoneH;
			};
			class TitleText: RscStructuredText
			{
				idc = 4604;
				text = "<t size='1.25' align='center' valign='middle'>TICKETS:</t>"; //--- ToDo: Localize;
				x = 0.376219 * safezoneW + safezoneX;
				y = 0.00500001 * safezoneH + safezoneY;
				w = 0.247562 * safezoneW;
				h = 0.033 * safezoneH;
			};
			class FactionIcon_L: RscPicture
			{
				idc = 4605;
				text = "#(argb,8,8,3)color(1,1,1,1)";
				x = 0.37973 * safezoneW + safezoneX;
				y = 0.0546296 * safezoneH + safezoneY;
				w = 0.0412603 * safezoneW;
				h = 0.055 * safezoneH;
			};
			class FactionIcon_R: RscPicture
			{
				idc = 4606;
				text = "#(argb,8,8,3)color(1,1,1,1)";
				x = 0.579624 * safezoneW + safezoneX;
				y = 0.0542592 * safezoneH + safezoneY;
				w = 0.0412603 * safezoneW;
				h = 0.055 * safezoneH;
			};
			class TicketText_L: RscStructuredText
			{
				idc = 4607;
				text = "<t size='1.5' align='center' valign='middle'>500</t>"; //--- ToDo: Localize;
				x = 0.439849 * safezoneW + safezoneX;
				y = 0.0546297 * safezoneH + safezoneY;
				w = 0.0515754 * safezoneW;
				h = 0.055 * safezoneH;
			};
			class TicketText_R: RscStructuredText
			{
				idc = 4608;
				text = "<t size='1.5' align='center' valign='middle'>500</t>"; //--- ToDo: Localize;
				x = 0.508851 * safezoneW + safezoneX;
				y = 0.0546299 * safezoneH + safezoneY;
				w = 0.0515754 * safezoneW;
				h = 0.055 * safezoneH;
			};
		};
	};
	
	class Default {
		idd = -1;
		fadein = 0;
		fadeout = 0;
		duration = 0;
	};
};

class CfgIdentities {
	class Beezo {
		face = "WhiteHead_06";
		glasses = "G_Spectacles_Tinted";
		name = "Beezo";
		nameSound = "Beezo";
		pitch = 1.0;
		speaker = "Male04GRE";
	};

	class Guthammer {
		face = "WhiteHead_03";
		glasses = "G_Tactical_Black";
		name = "Guthammer";
		nameSound = "Guthammer";
		pitch = 0.95;
		speaker = "Male04ENGB";
	};
};
